import json
import os
from fastapi import APIRouter, UploadFile, File, HTTPException, Request, Depends
from ..chat.create_embeddings import create_embeddings_for_pdf
from ..services.supabase_service import get_supbase_client
from ..dependencies.auth_dependencies import verify_auth_token
from ..services.supabase_service import get_files, upload_file_to_supabase, get_public_url

router = APIRouter(prefix=f"/api/{os.getenv('API_VERSION')}/upload", tags=["upload"])


@router.post("/")
async def upload_file(user_id: str = Depends(verify_auth_token),
                      file: UploadFile = File(...), ):
    file_content = await file.read()
    file_name = file.filename

    try:
        upload_file_to_supabase(f"{user_id}/{file_name}", file_content)
        # Fetch all available files
        files = get_files(os.getenv("SUPABASE_BUCKET_NAME"), f"{user_id}/")
        matched_file = None
        # Find the uploaded file's id that's generated by supabase
        for file in files:
            if file["name"] == file_name:
                matched_file = file
                break

        if matched_file:
            file_id = matched_file["id"]
            file_path = get_public_url(f"{user_id}/{matched_file['name']}")

            # Create pdf embedding and save file content into vectorstore
            create_embeddings_for_pdf(id=file_id, path=file_path)

            return {
                "message": "File has been uploaded successfully"
            }
        else:
            raise HTTPException(status_code=500, detail="Error when processing the document")
    except Exception as e:
        print(e)
        raise HTTPException(status_code=500, detail="Error when uploading the document")
